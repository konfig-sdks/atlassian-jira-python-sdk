# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class CreateProjectDetails(BaseModel):
    # Project keys must be unique and start with an uppercase letter followed by one or more uppercase alphanumeric characters. The maximum length is 10 characters.
    key: str = Field(alias='key')

    # The name of the project.
    name: str = Field(alias='name')

    # A brief description of the project.
    description: typing.Optional[str] = Field(None, alias='description')

    # The default assignee when creating issues for this project.
    assignee_type: typing.Optional[Literal["PROJECT_LEAD", "UNASSIGNED"]] = Field(None, alias='assigneeType')

    # An integer value for the project's avatar.
    avatar_id: typing.Optional[int] = Field(None, alias='avatarId')

    # The ID of the project's category. A complete list of category IDs is found using the [Get all project categories](https://dac-static.atlassian.com) operation.
    category_id: typing.Optional[int] = Field(None, alias='categoryId')

    # The ID of the field configuration scheme for the project. Use the [Get all field configuration schemes](https://dac-static.atlassian.com) operation to get a list of field configuration scheme IDs. If you specify the field configuration scheme you cannot specify the project template key.
    field_configuration_scheme: typing.Optional[int] = Field(None, alias='fieldConfigurationScheme')

    # The ID of the issue security scheme for the project, which enables you to control who can and cannot view issues. Use the [Get issue security schemes](https://dac-static.atlassian.com) resource to get all issue security scheme IDs.
    issue_security_scheme: typing.Optional[int] = Field(None, alias='issueSecurityScheme')

    # The ID of the issue type scheme for the project. Use the [Get all issue type schemes](https://dac-static.atlassian.com) operation to get a list of issue type scheme IDs. If you specify the issue type scheme you cannot specify the project template key.
    issue_type_scheme: typing.Optional[int] = Field(None, alias='issueTypeScheme')

    # The ID of the issue type screen scheme for the project. Use the [Get all issue type screen schemes](https://dac-static.atlassian.com) operation to get a list of issue type screen scheme IDs. If you specify the issue type screen scheme you cannot specify the project template key.
    issue_type_screen_scheme: typing.Optional[int] = Field(None, alias='issueTypeScreenScheme')

    # This parameter is deprecated because of privacy changes. Use `leadAccountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. The user name of the project lead. Either `lead` or `leadAccountId` must be set when creating a project. Cannot be provided with `leadAccountId`.
    lead: typing.Optional[str] = Field(None, alias='lead')

    # The account ID of the project lead. Either `lead` or `leadAccountId` must be set when creating a project. Cannot be provided with `lead`.
    lead_account_id: typing.Optional[str] = Field(None, alias='leadAccountId')

    # The ID of the notification scheme for the project. Use the [Get notification schemes](https://dac-static.atlassian.com) resource to get a list of notification scheme IDs.
    notification_scheme: typing.Optional[int] = Field(None, alias='notificationScheme')

    # The ID of the permission scheme for the project. Use the [Get all permission schemes](https://dac-static.atlassian.com) resource to see a list of all permission scheme IDs.
    permission_scheme: typing.Optional[int] = Field(None, alias='permissionScheme')

    # A predefined configuration for a project. The type of the `projectTemplateKey` must match with the type of the `projectTypeKey`.
    project_template_key: typing.Optional[Literal["com.pyxis.greenhopper.jira:gh-simplified-agility-kanban", "com.pyxis.greenhopper.jira:gh-simplified-agility-scrum", "com.pyxis.greenhopper.jira:gh-simplified-basic", "com.pyxis.greenhopper.jira:gh-simplified-kanban-classic", "com.pyxis.greenhopper.jira:gh-simplified-scrum-classic", "com.pyxis.greenhopper.jira:gh-cross-team-template", "com.pyxis.greenhopper.jira:gh-cross-team-planning-template", "com.atlassian.servicedesk:simplified-it-service-management", "com.atlassian.servicedesk:simplified-general-service-desk", "com.atlassian.servicedesk:simplified-general-service-desk-it", "com.atlassian.servicedesk:simplified-general-service-desk-business", "com.atlassian.servicedesk:simplified-internal-service-desk", "com.atlassian.servicedesk:simplified-external-service-desk", "com.atlassian.servicedesk:simplified-hr-service-desk", "com.atlassian.servicedesk:simplified-facilities-service-desk", "com.atlassian.servicedesk:simplified-legal-service-desk", "com.atlassian.servicedesk:simplified-marketing-service-desk", "com.atlassian.servicedesk:simplified-finance-service-desk", "com.atlassian.servicedesk:simplified-analytics-service-desk", "com.atlassian.servicedesk:simplified-design-service-desk", "com.atlassian.servicedesk:simplified-sales-service-desk", "com.atlassian.servicedesk:simplified-halp-service-desk", "com.atlassian.servicedesk:simplified-blank-project-it", "com.atlassian.servicedesk:simplified-blank-project-business", "com.atlassian.servicedesk:next-gen-it-service-desk", "com.atlassian.servicedesk:next-gen-hr-service-desk", "com.atlassian.servicedesk:next-gen-legal-service-desk", "com.atlassian.servicedesk:next-gen-marketing-service-desk", "com.atlassian.servicedesk:next-gen-facilities-service-desk", "com.atlassian.servicedesk:next-gen-general-service-desk", "com.atlassian.servicedesk:next-gen-general-it-service-desk", "com.atlassian.servicedesk:next-gen-general-business-service-desk", "com.atlassian.servicedesk:next-gen-analytics-service-desk", "com.atlassian.servicedesk:next-gen-finance-service-desk", "com.atlassian.servicedesk:next-gen-design-service-desk", "com.atlassian.servicedesk:next-gen-sales-service-desk", "com.atlassian.jira-core-project-templates:jira-core-simplified-content-management", "com.atlassian.jira-core-project-templates:jira-core-simplified-document-approval", "com.atlassian.jira-core-project-templates:jira-core-simplified-lead-tracking", "com.atlassian.jira-core-project-templates:jira-core-simplified-process-control", "com.atlassian.jira-core-project-templates:jira-core-simplified-procurement", "com.atlassian.jira-core-project-templates:jira-core-simplified-project-management", "com.atlassian.jira-core-project-templates:jira-core-simplified-recruitment", "com.atlassian.jira-core-project-templates:jira-core-simplified-task-"]] = Field(None, alias='projectTemplateKey')

    # The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes), which defines the application-specific feature set. If you don't specify the project template you have to specify the project type.
    project_type_key: typing.Optional[Literal["software", "service_desk", "business"]] = Field(None, alias='projectTypeKey')

    # A link to information about this project, such as project documentation
    url: typing.Optional[str] = Field(None, alias='url')

    # The ID of the workflow scheme for the project. Use the [Get all workflow schemes](https://dac-static.atlassian.com) operation to get a list of workflow scheme IDs. If you specify the workflow scheme you cannot specify the project template key.
    workflow_scheme: typing.Optional[int] = Field(None, alias='workflowScheme')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
