# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from atlassian_jira_python_sdk.pydantic.new_user_details_application_keys import NewUserDetailsApplicationKeys
from atlassian_jira_python_sdk.pydantic.new_user_details_products import NewUserDetailsProducts

class NewUserDetails(BaseModel):
    # The email address for the user.
    email_address: str = Field(alias='emailAddress')

    application_keys: typing.Optional[NewUserDetailsApplicationKeys] = Field(None, alias='applicationKeys')

    # This property is no longer available. If the user has an Atlassian account, their display name is not changed. If the user does not have an Atlassian account, they are sent an email asking them set up an account.
    display_name: typing.Optional[str] = Field(None, alias='displayName')

    # This property is no longer available. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
    key: typing.Optional[str] = Field(None, alias='key')

    # This property is no longer available. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
    name: typing.Optional[str] = Field(None, alias='name')

    # This property is no longer available. If the user has an Atlassian account, their password is not changed. If the user does not have an Atlassian account, they are sent an email asking them set up an account.
    password: typing.Optional[str] = Field(None, alias='password')

    products: typing.Optional[NewUserDetailsProducts] = Field(None, alias='products')

    # The URL of the user.
    self_: typing.Optional[str] = Field(None, alias='self')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
