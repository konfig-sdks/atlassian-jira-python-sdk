# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from atlassian_jira_python_sdk.pydantic.dashboard_gadget_position import DashboardGadgetPosition

class DashboardGadgetSettings(BaseModel):
    # The title of the gadget.
    title: typing.Optional[str] = Field(None, alias='title')

    # The color of the gadget. Should be one of `blue`, `red`, `yellow`, `green`, `cyan`, `purple`, `gray`, or `white`.
    color: typing.Optional[str] = Field(None, alias='color')

    # Whether to ignore the validation of module key and URI. For example, when a gadget is created that is a part of an application that isn't installed.
    ignore_uri_and_module_key_validation: typing.Optional[bool] = Field(None, alias='ignoreUriAndModuleKeyValidation')

    # The module key of the gadget type. Can't be provided with `uri`.
    module_key: typing.Optional[str] = Field(None, alias='moduleKey')

    # The position of the gadget. When the gadget is placed into the position, other gadgets in the same column are moved down to accommodate it.
    position: typing.Optional[DashboardGadgetPosition] = Field(None, alias='position')

    # The URI of the gadget type. Can't be provided with `moduleKey`.
    uri: typing.Optional[str] = Field(None, alias='uri')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
