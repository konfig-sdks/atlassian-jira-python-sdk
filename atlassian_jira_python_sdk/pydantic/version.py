# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from atlassian_jira_python_sdk.pydantic.simple_link import SimpleLink
from atlassian_jira_python_sdk.pydantic.version_approver import VersionApprover
from atlassian_jira_python_sdk.pydantic.version_issues_status import VersionIssuesStatus

class Version(BaseModel):
    # The description of the version. Optional when creating or updating a version. The maximum size is 16,384 bytes.
    description: typing.Optional[str] = Field(None, alias='description')

    # If the expand option `approvers` is used, returns a list containing the approvers for this version.
    approvers: typing.Optional[typing.List[VersionApprover]] = Field(None, alias='approvers')

    # Indicates that the version is archived. Optional when creating or updating a version.
    archived: typing.Optional[bool] = Field(None, alias='archived')

    # If the expand option `driver` is used, returns the Atlassian account ID of the driver.
    driver: typing.Optional[str] = Field(None, alias='driver')

    # Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:   *  `operations` Returns the list of operations available for this version.  *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.  *  `driver` Returns the Atlassian account ID of the version driver.  *  `approvers` Returns a list containing approvers for this version.  Optional for create and update.
    expand: typing.Optional[str] = Field(None, alias='expand')

    # The ID of the version.
    id: typing.Optional[str] = Field(None, alias='id')

    # If the expand option `issuesstatus` is used, returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.
    issues_status_for_fix_version: typing.Optional[VersionIssuesStatus] = Field(None, alias='issuesStatusForFixVersion')

    # The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.
    move_unfixed_issues_to: typing.Optional[str] = Field(None, alias='moveUnfixedIssuesTo')

    # The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.
    name: typing.Optional[str] = Field(None, alias='name')

    # If the expand option `operations` is used, returns the list of operations available for this version.
    operations: typing.Optional[typing.List[SimpleLink]] = Field(None, alias='operations')

    # Indicates that the version is overdue.
    overdue: typing.Optional[bool] = Field(None, alias='overdue')

    # Deprecated. Use `projectId`.
    project: typing.Optional[str] = Field(None, alias='project')

    # The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.
    project_id: typing.Optional[int] = Field(None, alias='projectId')

    # The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.
    release_date: typing.Optional[date] = Field(None, alias='releaseDate')

    # Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.
    released: typing.Optional[bool] = Field(None, alias='released')

    # The URL of the version.
    self_: typing.Optional[str] = Field(None, alias='self')

    # The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.
    start_date: typing.Optional[date] = Field(None, alias='startDate')

    # The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.
    user_release_date: typing.Optional[str] = Field(None, alias='userReleaseDate')

    # The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.
    user_start_date: typing.Optional[str] = Field(None, alias='userStartDate')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
