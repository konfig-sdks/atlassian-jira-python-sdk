# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class ConnectCustomFieldValue(BaseModel):
    # The type of custom field.
    _type: Literal["StringIssueField", "NumberIssueField", "RichTextIssueField", "SingleSelectIssueField", "MultiSelectIssueField", "TextIssueField"] = Field(alias='_type')

    # The custom field ID.
    field_i_d: int = Field(alias='fieldID')

    # The issue ID.
    issue_i_d: int = Field(alias='issueID')

    # The value of number type custom field when `_type` is `NumberIssueField`.
    number: typing.Optional[typing.Union[int, float]] = Field(None, alias='number')

    # The value of single select and multiselect custom field type when `_type` is `SingleSelectIssueField` or `MultiSelectIssueField`.
    option_i_d: typing.Optional[str] = Field(None, alias='optionID')

    # The value of richText type custom field when `_type` is `RichTextIssueField`.
    rich_text: typing.Optional[str] = Field(None, alias='richText')

    # The value of string type custom field when `_type` is `StringIssueField`.
    string: typing.Optional[str] = Field(None, alias='string')

    # The value of of text custom field type when `_type` is `TextIssueField`.
    text: typing.Optional[str] = Field(None, alias='text')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
