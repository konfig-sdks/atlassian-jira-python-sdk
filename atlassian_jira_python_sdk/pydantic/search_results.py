# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from atlassian_jira_python_sdk.pydantic.issue_bean import IssueBean
from atlassian_jira_python_sdk.pydantic.search_results_names import SearchResultsNames
from atlassian_jira_python_sdk.pydantic.search_results_schema import SearchResultsSchema
from atlassian_jira_python_sdk.pydantic.search_results_warning_messages import SearchResultsWarningMessages

class SearchResults(BaseModel):
    # Expand options that include additional search result details in the response.
    expand: typing.Optional[str] = Field(None, alias='expand')

    # The list of issues found by the search.
    issues: typing.Optional[typing.List[IssueBean]] = Field(None, alias='issues')

    # The maximum number of results that could be on the page.
    max_results: typing.Optional[int] = Field(None, alias='maxResults')

    names: typing.Optional[SearchResultsNames] = Field(None, alias='names')

    schema: typing.Optional[SearchResultsSchema] = Field(None, alias='schema')

    # The index of the first item returned on the page.
    start_at: typing.Optional[int] = Field(None, alias='startAt')

    # The number of results on the page.
    total: typing.Optional[int] = Field(None, alias='total')

    warning_messages: typing.Optional[SearchResultsWarningMessages] = Field(None, alias='warningMessages')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
