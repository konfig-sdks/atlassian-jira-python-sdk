# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from atlassian_jira_python_sdk.pydantic.jql_function_precomputation_bean_arguments import JqlFunctionPrecomputationBeanArguments

class JqlFunctionPrecomputationBean(BaseModel):
    arguments: typing.Optional[JqlFunctionPrecomputationBeanArguments] = Field(None, alias='arguments')

    # The timestamp of the precomputation creation.
    created: typing.Optional[datetime] = Field(None, alias='created')

    # The error message to be displayed to the user.
    error: typing.Optional[str] = Field(None, alias='error')

    # The field the function was executed against.
    field: typing.Optional[str] = Field(None, alias='field')

    # The function key.
    function_key: typing.Optional[str] = Field(None, alias='functionKey')

    # The name of the function.
    function_name: typing.Optional[str] = Field(None, alias='functionName')

    # The id of the precomputation.
    id: typing.Optional[str] = Field(None, alias='id')

    # The operator in context of which function was executed.
    operator: typing.Optional[str] = Field(None, alias='operator')

    # The timestamp of the precomputation last update.
    updated: typing.Optional[datetime] = Field(None, alias='updated')

    # The timestamp of the precomputation last usage.
    used: typing.Optional[datetime] = Field(None, alias='used')

    # The JQL fragment stored as the precomputation.
    value: typing.Optional[str] = Field(None, alias='value')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
