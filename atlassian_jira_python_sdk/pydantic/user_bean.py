# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from atlassian_jira_python_sdk.pydantic.user_bean_avatar_urls import UserBeanAvatarUrls

class UserBean(BaseModel):
    # The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
    account_id: typing.Optional[str] = Field(None, alias='accountId')

    # Whether the user is active.
    active: typing.Optional[bool] = Field(None, alias='active')

    # The avatars of the user.
    avatar_urls: typing.Optional[UserBeanAvatarUrls] = Field(None, alias='avatarUrls')

    # The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.
    display_name: typing.Optional[str] = Field(None, alias='displayName')

    # This property is deprecated in favor of `accountId` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.   The key of the user.
    key: typing.Optional[str] = Field(None, alias='key')

    # This property is deprecated in favor of `accountId` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.   The username of the user.
    name: typing.Optional[str] = Field(None, alias='name')

    # The URL of the user.
    self_: typing.Optional[str] = Field(None, alias='self')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
