# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from atlassian_jira_python_sdk.pydantic.avatar_urls_bean import AvatarUrlsBean
from atlassian_jira_python_sdk.pydantic.hierarchy import Hierarchy
from atlassian_jira_python_sdk.pydantic.issue_type_details import IssueTypeDetails
from atlassian_jira_python_sdk.pydantic.project_category import ProjectCategory
from atlassian_jira_python_sdk.pydantic.project_component import ProjectComponent
from atlassian_jira_python_sdk.pydantic.project_insight import ProjectInsight
from atlassian_jira_python_sdk.pydantic.project_landing_page_info import ProjectLandingPageInfo
from atlassian_jira_python_sdk.pydantic.project_permissions import ProjectPermissions
from atlassian_jira_python_sdk.pydantic.project_properties import ProjectProperties
from atlassian_jira_python_sdk.pydantic.project_roles import ProjectRoles
from atlassian_jira_python_sdk.pydantic.user import User
from atlassian_jira_python_sdk.pydantic.version import Version

class Project(BaseModel):
    # List of the components contained in the project.
    components: typing.Optional[typing.List[ProjectComponent]] = Field(None, alias='components')

    # A brief description of the project.
    description: typing.Optional[str] = Field(None, alias='description')

    # Whether the project is archived.
    archived: typing.Optional[bool] = Field(None, alias='archived')

    # The user who archived the project.
    archived_by: typing.Optional[User] = Field(None, alias='archivedBy')

    # The date when the project was archived.
    archived_date: typing.Optional[datetime] = Field(None, alias='archivedDate')

    # The default assignee when creating issues for this project.
    assignee_type: typing.Optional[Literal["PROJECT_LEAD", "UNASSIGNED"]] = Field(None, alias='assigneeType')

    # The URLs of the project's avatars.
    avatar_urls: typing.Optional[AvatarUrlsBean] = Field(None, alias='avatarUrls')

    # Whether the project is marked as deleted.
    deleted: typing.Optional[bool] = Field(None, alias='deleted')

    # The user who marked the project as deleted.
    deleted_by: typing.Optional[User] = Field(None, alias='deletedBy')

    # The date when the project was marked as deleted.
    deleted_date: typing.Optional[datetime] = Field(None, alias='deletedDate')

    # An email address associated with the project.
    email: typing.Optional[str] = Field(None, alias='email')

    # Expand options that include additional project details in the response.
    expand: typing.Optional[str] = Field(None, alias='expand')

    # Whether the project is selected as a favorite.
    favourite: typing.Optional[bool] = Field(None, alias='favourite')

    # The ID of the project.
    id: typing.Optional[str] = Field(None, alias='id')

    # Insights about the project.
    insight: typing.Optional[ProjectInsight] = Field(None, alias='insight')

    # Whether the project is private from the user's perspective. This means the user can't see the project or any associated issues.
    is_private: typing.Optional[bool] = Field(None, alias='isPrivate')

    # The issue type hierarchy for the project.
    issue_type_hierarchy: typing.Optional[Hierarchy] = Field(None, alias='issueTypeHierarchy')

    # List of the issue types available in the project.
    issue_types: typing.Optional[typing.List[IssueTypeDetails]] = Field(None, alias='issueTypes')

    # The key of the project.
    key: typing.Optional[str] = Field(None, alias='key')

    # The project landing page info.
    landing_page_info: typing.Optional[ProjectLandingPageInfo] = Field(None, alias='landingPageInfo')

    # The username of the project lead.
    lead: typing.Optional[User] = Field(None, alias='lead')

    # The name of the project.
    name: typing.Optional[str] = Field(None, alias='name')

    # User permissions on the project
    permissions: typing.Optional[ProjectPermissions] = Field(None, alias='permissions')

    # The category the project belongs to.
    project_category: typing.Optional[ProjectCategory] = Field(None, alias='projectCategory')

    # The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.
    project_type_key: typing.Optional[Literal["software", "service_desk", "business"]] = Field(None, alias='projectTypeKey')

    properties: typing.Optional[ProjectProperties] = Field(None, alias='properties')

    # The date when the project is deleted permanently.
    retention_till_date: typing.Optional[datetime] = Field(None, alias='retentionTillDate')

    roles: typing.Optional[ProjectRoles] = Field(None, alias='roles')

    # The URL of the project details.
    self_: typing.Optional[str] = Field(None, alias='self')

    # Whether the project is simplified.
    simplified: typing.Optional[bool] = Field(None, alias='simplified')

    # The type of the project.
    style: typing.Optional[Literal["classic", "next-gen"]] = Field(None, alias='style')

    # A link to information about this project, such as project documentation.
    url: typing.Optional[str] = Field(None, alias='url')

    # Unique ID for next-gen projects.
    uuid: typing.Optional[str] = Field(None, alias='uuid')

    # The versions defined in the project. For more information, see [Create version](https://dac-static.atlassian.com).
    versions: typing.Optional[typing.List[Version]] = Field(None, alias='versions')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
