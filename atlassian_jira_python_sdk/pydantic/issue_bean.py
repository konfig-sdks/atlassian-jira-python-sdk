# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from atlassian_jira_python_sdk.pydantic.included_fields import IncludedFields
from atlassian_jira_python_sdk.pydantic.issue_bean_fields import IssueBeanFields
from atlassian_jira_python_sdk.pydantic.issue_bean_names import IssueBeanNames
from atlassian_jira_python_sdk.pydantic.issue_bean_properties import IssueBeanProperties
from atlassian_jira_python_sdk.pydantic.issue_bean_rendered_fields import IssueBeanRenderedFields
from atlassian_jira_python_sdk.pydantic.issue_bean_schema import IssueBeanSchema
from atlassian_jira_python_sdk.pydantic.issue_bean_versioned_representations import IssueBeanVersionedRepresentations
from atlassian_jira_python_sdk.pydantic.issue_transition import IssueTransition
from atlassian_jira_python_sdk.pydantic.issue_update_metadata import IssueUpdateMetadata
from atlassian_jira_python_sdk.pydantic.operations import Operations
from atlassian_jira_python_sdk.pydantic.page_of_changelogs import PageOfChangelogs

class IssueBean(BaseModel):
    # Details of changelogs associated with the issue.
    changelog: typing.Optional[PageOfChangelogs] = Field(None, alias='changelog')

    # The metadata for the fields on the issue that can be amended.
    editmeta: typing.Optional[IssueUpdateMetadata] = Field(None, alias='editmeta')

    # Expand options that include additional issue details in the response.
    expand: typing.Optional[str] = Field(None, alias='expand')

    fields: typing.Optional[IssueBeanFields] = Field(None, alias='fields')

    fields_to_include: typing.Optional[IncludedFields] = Field(None, alias='fieldsToInclude')

    # The ID of the issue.
    id: typing.Optional[str] = Field(None, alias='id')

    # The key of the issue.
    key: typing.Optional[str] = Field(None, alias='key')

    names: typing.Optional[IssueBeanNames] = Field(None, alias='names')

    # The operations that can be performed on the issue.
    operations: typing.Optional[Operations] = Field(None, alias='operations')

    properties: typing.Optional[IssueBeanProperties] = Field(None, alias='properties')

    rendered_fields: typing.Optional[IssueBeanRenderedFields] = Field(None, alias='renderedFields')

    schema: typing.Optional[IssueBeanSchema] = Field(None, alias='schema')

    # The URL of the issue details.
    self_: typing.Optional[str] = Field(None, alias='self')

    # The transitions that can be performed on the issue.
    transitions: typing.Optional[typing.List[IssueTransition]] = Field(None, alias='transitions')

    versioned_representations: typing.Optional[IssueBeanVersionedRepresentations] = Field(None, alias='versionedRepresentations')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
