# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from atlassian_jira_python_sdk.pydantic.project_details import ProjectDetails
from atlassian_jira_python_sdk.pydantic.published_workflow_id import PublishedWorkflowId
from atlassian_jira_python_sdk.pydantic.transition import Transition
from atlassian_jira_python_sdk.pydantic.workflow_operations import WorkflowOperations
from atlassian_jira_python_sdk.pydantic.workflow_scheme_id_name import WorkflowSchemeIdName
from atlassian_jira_python_sdk.pydantic.workflow_status import WorkflowStatus

class Workflow(BaseModel):
    # The description of the workflow.
    description: str = Field(alias='description')

    id: PublishedWorkflowId = Field(alias='id')

    # The creation date of the workflow.
    created: typing.Optional[datetime] = Field(None, alias='created')

    # Whether the workflow has a draft version.
    has_draft_workflow: typing.Optional[bool] = Field(None, alias='hasDraftWorkflow')

    # Whether this is the default workflow.
    is_default: typing.Optional[bool] = Field(None, alias='isDefault')

    operations: typing.Optional[WorkflowOperations] = Field(None, alias='operations')

    # The projects the workflow is assigned to, through workflow schemes.
    projects: typing.Optional[typing.List[ProjectDetails]] = Field(None, alias='projects')

    # The workflow schemes the workflow is assigned to.
    schemes: typing.Optional[typing.List[WorkflowSchemeIdName]] = Field(None, alias='schemes')

    # The statuses of the workflow.
    statuses: typing.Optional[typing.List[WorkflowStatus]] = Field(None, alias='statuses')

    # The transitions of the workflow.
    transitions: typing.Optional[typing.List[Transition]] = Field(None, alias='transitions')

    # The last edited date of the workflow.
    updated: typing.Optional[datetime] = Field(None, alias='updated')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
