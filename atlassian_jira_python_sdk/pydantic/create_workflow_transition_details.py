# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from atlassian_jira_python_sdk.pydantic.create_workflow_transition_details_from import CreateWorkflowTransitionDetailsFrom
from atlassian_jira_python_sdk.pydantic.create_workflow_transition_details_properties import CreateWorkflowTransitionDetailsProperties
from atlassian_jira_python_sdk.pydantic.create_workflow_transition_rules_details import CreateWorkflowTransitionRulesDetails
from atlassian_jira_python_sdk.pydantic.create_workflow_transition_screen_details import CreateWorkflowTransitionScreenDetails

class CreateWorkflowTransitionDetails(BaseModel):
    # The name of the transition. The maximum length is 60 characters.
    name: str = Field(alias='name')

    # The status the transition goes to.
    to: str = Field(alias='to')

    # The type of the transition.
    type: Literal["global", "initial", "directed"] = Field(alias='type')

    # The description of the transition. The maximum length is 1000 characters.
    description: typing.Optional[str] = Field(None, alias='description')

    from_: typing.Optional[CreateWorkflowTransitionDetailsFrom] = Field(None, alias='from')

    properties: typing.Optional[CreateWorkflowTransitionDetailsProperties] = Field(None, alias='properties')

    # The rules of the transition.
    rules: typing.Optional[CreateWorkflowTransitionRulesDetails] = Field(None, alias='rules')

    # The screen of the transition.
    screen: typing.Optional[CreateWorkflowTransitionScreenDetails] = Field(None, alias='screen')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
