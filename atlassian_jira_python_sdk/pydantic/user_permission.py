# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class UserPermission(BaseModel):
    # The description of the permission.
    description: typing.Optional[str] = Field(None, alias='description')

    # Indicate whether the permission key is deprecated. Note that deprecated keys cannot be used in the `permissions parameter of Get my permissions. Deprecated keys are not returned by Get all permissions.`
    deprecated_key: typing.Optional[bool] = Field(None, alias='deprecatedKey')

    # Whether the permission is available to the user in the queried context.
    have_permission: typing.Optional[bool] = Field(None, alias='havePermission')

    # The ID of the permission. Either `id` or `key` must be specified. Use [Get all permissions](https://dac-static.atlassian.com) to get the list of permissions.
    id: typing.Optional[str] = Field(None, alias='id')

    # The key of the permission. Either `id` or `key` must be specified. Use [Get all permissions](https://dac-static.atlassian.com) to get the list of permissions.
    key: typing.Optional[str] = Field(None, alias='key')

    # The name of the permission.
    name: typing.Optional[str] = Field(None, alias='name')

    # The type of the permission.
    type: typing.Optional[Literal["GLOBAL", "PROJECT"]] = Field(None, alias='type')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
