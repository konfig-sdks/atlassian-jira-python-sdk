# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from atlassian_jira_python_sdk.type.entity_property import EntityProperty
from atlassian_jira_python_sdk.type.user_details import UserDetails
from atlassian_jira_python_sdk.type.visibility import Visibility

RequiredWorklog = TypedDict("RequiredWorklog", {
    })

OptionalWorklog = TypedDict("OptionalWorklog", {
    "author": UserDetails,

    # A comment about the worklog in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/). Optional when creating or updating a worklog.
    "comment": typing.Union[bool, date, datetime, dict, float, int, list, str, None],

    # The datetime on which the worklog was created.
    "created": datetime,

    # The ID of the worklog record.
    "id": str,

    # The ID of the issue this worklog is for.
    "issueId": str,

    # Details of properties for the worklog. Optional when creating or updating a worklog.
    "properties": typing.List[EntityProperty],

    # The URL of the worklog item.
    "self": str,

    # The datetime on which the worklog effort was started. Required when creating a worklog. Optional when updating a worklog.
    "started": datetime,

    # The time spent working on the issue as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). Required when creating a worklog if `timeSpentSeconds` isn't provided. Optional when updating a worklog. Cannot be provided if `timeSpentSecond` is provided.
    "timeSpent": str,

    # The time in seconds spent working on the issue. Required when creating a worklog if `timeSpent` isn't provided. Optional when updating a worklog. Cannot be provided if `timeSpent` is provided.
    "timeSpentSeconds": int,

    "updateAuthor": UserDetails,

    # The datetime on which the worklog was last updated.
    "updated": datetime,

    "visibility": Visibility,
    }, total=False)

class Worklog(RequiredWorklog, OptionalWorklog):
    pass
