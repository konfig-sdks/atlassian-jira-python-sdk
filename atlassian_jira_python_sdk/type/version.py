# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from atlassian_jira_python_sdk.type.simple_link import SimpleLink
from atlassian_jira_python_sdk.type.version_approver import VersionApprover
from atlassian_jira_python_sdk.type.version_issues_status import VersionIssuesStatus

RequiredVersion = TypedDict("RequiredVersion", {
    })

OptionalVersion = TypedDict("OptionalVersion", {
    # The description of the version. Optional when creating or updating a version. The maximum size is 16,384 bytes.
    "description": str,

    # If the expand option `approvers` is used, returns a list containing the approvers for this version.
    "approvers": typing.List[VersionApprover],

    # Indicates that the version is archived. Optional when creating or updating a version.
    "archived": bool,

    # If the expand option `driver` is used, returns the Atlassian account ID of the driver.
    "driver": str,

    # Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:   *  `operations` Returns the list of operations available for this version.  *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.  *  `driver` Returns the Atlassian account ID of the version driver.  *  `approvers` Returns a list containing approvers for this version.  Optional for create and update.
    "expand": str,

    # The ID of the version.
    "id": str,

    # If the expand option `issuesstatus` is used, returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.
    "issuesStatusForFixVersion": VersionIssuesStatus,

    # The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.
    "moveUnfixedIssuesTo": str,

    # The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.
    "name": str,

    # If the expand option `operations` is used, returns the list of operations available for this version.
    "operations": typing.List[SimpleLink],

    # Indicates that the version is overdue.
    "overdue": bool,

    # Deprecated. Use `projectId`.
    "project": str,

    # The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.
    "projectId": int,

    # The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.
    "releaseDate": date,

    # Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.
    "released": bool,

    # The URL of the version.
    "self": str,

    # The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.
    "startDate": date,

    # The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.
    "userReleaseDate": str,

    # The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.
    "userStartDate": str,
    }, total=False)

class Version(RequiredVersion, OptionalVersion):
    pass
