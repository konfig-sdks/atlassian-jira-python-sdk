# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from atlassian_jira_python_sdk.type.user import User

RequiredComponentWithIssueCount = TypedDict("RequiredComponentWithIssueCount", {
    })

OptionalComponentWithIssueCount = TypedDict("OptionalComponentWithIssueCount", {
    # The description for the component.
    "description": str,

    # The details of the user associated with `assigneeType`, if any. See `realAssignee` for details of the user assigned to issues created with this component.
    "assignee": User,

    # The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Takes the following values:   *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.  *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.  *  `UNASSIGNED` an assignee is not set for issues created with this component.  *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.
    "assigneeType": str,

    # The unique identifier for the component.
    "id": str,

    # Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned.
    "isAssigneeTypeValid": bool,

    # Count of issues for the component.
    "issueCount": int,

    # The user details for the component's lead user.
    "lead": User,

    # The name for the component.
    "name": str,

    # The key of the project to which the component is assigned.
    "project": str,

    # Not used.
    "projectId": int,

    # The user assigned to issues created with this component, when `assigneeType` does not identify a valid assignee.
    "realAssignee": User,

    # The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:   *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.  *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.  *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.  *  `PROJECT_DEFAULT` when none of the preceding cases are true.
    "realAssigneeType": str,

    # The URL for this count of the issues contained in the component.
    "self": str,
    }, total=False)

class ComponentWithIssueCount(RequiredComponentWithIssueCount, OptionalComponentWithIssueCount):
    pass
