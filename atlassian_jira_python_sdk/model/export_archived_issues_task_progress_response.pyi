# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from atlassian_jira_python_sdk import schemas  # noqa: F401


class ExportArchivedIssuesTaskProgressResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    The response for status request for a running/completed export task.
    """


    class MetaOapg:
        
        class properties:
            fileUrl = schemas.StrSchema
            payload = schemas.StrSchema
            progress = schemas.Int64Schema
            status = schemas.StrSchema
            submittedTime = schemas.DateTimeSchema
            taskId = schemas.StrSchema
            __annotations__ = {
                "fileUrl": fileUrl,
                "payload": payload,
                "progress": progress,
                "status": status,
                "submittedTime": submittedTime,
                "taskId": taskId,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fileUrl"]) -> MetaOapg.properties.fileUrl: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["payload"]) -> MetaOapg.properties.payload: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["progress"]) -> MetaOapg.properties.progress: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["submittedTime"]) -> MetaOapg.properties.submittedTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["taskId"]) -> MetaOapg.properties.taskId: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["fileUrl", "payload", "progress", "status", "submittedTime", "taskId", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fileUrl"]) -> typing.Union[MetaOapg.properties.fileUrl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["payload"]) -> typing.Union[MetaOapg.properties.payload, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["progress"]) -> typing.Union[MetaOapg.properties.progress, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["submittedTime"]) -> typing.Union[MetaOapg.properties.submittedTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["taskId"]) -> typing.Union[MetaOapg.properties.taskId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["fileUrl", "payload", "progress", "status", "submittedTime", "taskId", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        fileUrl: typing.Union[MetaOapg.properties.fileUrl, str, schemas.Unset] = schemas.unset,
        payload: typing.Union[MetaOapg.properties.payload, str, schemas.Unset] = schemas.unset,
        progress: typing.Union[MetaOapg.properties.progress, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        submittedTime: typing.Union[MetaOapg.properties.submittedTime, str, datetime, schemas.Unset] = schemas.unset,
        taskId: typing.Union[MetaOapg.properties.taskId, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ExportArchivedIssuesTaskProgressResponse':
        return super().__new__(
            cls,
            *args,
            fileUrl=fileUrl,
            payload=payload,
            progress=progress,
            status=status,
            submittedTime=submittedTime,
            taskId=taskId,
            _configuration=_configuration,
            **kwargs,
        )
