# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from atlassian_jira_python_sdk import schemas  # noqa: F401


class VersionIssueCounts(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Various counts of issues within a version.
    """


    class MetaOapg:
        
        class properties:
            
            
            class customFieldUsage(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['VersionUsageInCustomField']:
                        return VersionUsageInCustomField
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['VersionUsageInCustomField'], typing.List['VersionUsageInCustomField']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'customFieldUsage':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'VersionUsageInCustomField':
                    return super().__getitem__(i)
            issueCountWithCustomFieldsShowingVersion = schemas.Int64Schema
            issuesAffectedCount = schemas.Int64Schema
            issuesFixedCount = schemas.Int64Schema
            _self = schemas.StrSchema
            __annotations__ = {
                "customFieldUsage": customFieldUsage,
                "issueCountWithCustomFieldsShowingVersion": issueCountWithCustomFieldsShowingVersion,
                "issuesAffectedCount": issuesAffectedCount,
                "issuesFixedCount": issuesFixedCount,
                "self": _self,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customFieldUsage"]) -> MetaOapg.properties.customFieldUsage: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["issueCountWithCustomFieldsShowingVersion"]) -> MetaOapg.properties.issueCountWithCustomFieldsShowingVersion: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["issuesAffectedCount"]) -> MetaOapg.properties.issuesAffectedCount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["issuesFixedCount"]) -> MetaOapg.properties.issuesFixedCount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["self"]) -> MetaOapg.properties._self: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["customFieldUsage", "issueCountWithCustomFieldsShowingVersion", "issuesAffectedCount", "issuesFixedCount", "self", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customFieldUsage"]) -> typing.Union[MetaOapg.properties.customFieldUsage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["issueCountWithCustomFieldsShowingVersion"]) -> typing.Union[MetaOapg.properties.issueCountWithCustomFieldsShowingVersion, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["issuesAffectedCount"]) -> typing.Union[MetaOapg.properties.issuesAffectedCount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["issuesFixedCount"]) -> typing.Union[MetaOapg.properties.issuesFixedCount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["self"]) -> typing.Union[MetaOapg.properties._self, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["customFieldUsage", "issueCountWithCustomFieldsShowingVersion", "issuesAffectedCount", "issuesFixedCount", "self", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        customFieldUsage: typing.Union[MetaOapg.properties.customFieldUsage, list, tuple, schemas.Unset] = schemas.unset,
        issueCountWithCustomFieldsShowingVersion: typing.Union[MetaOapg.properties.issueCountWithCustomFieldsShowingVersion, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        issuesAffectedCount: typing.Union[MetaOapg.properties.issuesAffectedCount, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        issuesFixedCount: typing.Union[MetaOapg.properties.issuesFixedCount, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'VersionIssueCounts':
        return super().__new__(
            cls,
            *args,
            customFieldUsage=customFieldUsage,
            issueCountWithCustomFieldsShowingVersion=issueCountWithCustomFieldsShowingVersion,
            issuesAffectedCount=issuesAffectedCount,
            issuesFixedCount=issuesFixedCount,
            _configuration=_configuration,
            **kwargs,
        )

from atlassian_jira_python_sdk.model.version_usage_in_custom_field import VersionUsageInCustomField
