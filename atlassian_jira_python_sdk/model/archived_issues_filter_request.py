# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from atlassian_jira_python_sdk import schemas  # noqa: F401


class ArchivedIssuesFilterRequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Details of a filter for exporting archived issues.
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def archivedBy() -> typing.Type['ArchivedIssuesFilterRequestArchivedBy']:
                return ArchivedIssuesFilterRequestArchivedBy
        
            @staticmethod
            def archivedDateRange() -> typing.Type['DateRangeFilterRequest']:
                return DateRangeFilterRequest
        
            @staticmethod
            def issueTypes() -> typing.Type['ArchivedIssuesFilterRequestIssueTypes']:
                return ArchivedIssuesFilterRequestIssueTypes
        
            @staticmethod
            def projects() -> typing.Type['ArchivedIssuesFilterRequestProjects']:
                return ArchivedIssuesFilterRequestProjects
        
            @staticmethod
            def reporters() -> typing.Type['ArchivedIssuesFilterRequestReporters']:
                return ArchivedIssuesFilterRequestReporters
            __annotations__ = {
                "archivedBy": archivedBy,
                "archivedDateRange": archivedDateRange,
                "issueTypes": issueTypes,
                "projects": projects,
                "reporters": reporters,
            }
        additional_properties = schemas.AnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["archivedBy"]) -> 'ArchivedIssuesFilterRequestArchivedBy': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["archivedDateRange"]) -> 'DateRangeFilterRequest': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["issueTypes"]) -> 'ArchivedIssuesFilterRequestIssueTypes': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projects"]) -> 'ArchivedIssuesFilterRequestProjects': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reporters"]) -> 'ArchivedIssuesFilterRequestReporters': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["archivedBy"], typing_extensions.Literal["archivedDateRange"], typing_extensions.Literal["issueTypes"], typing_extensions.Literal["projects"], typing_extensions.Literal["reporters"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["archivedBy"]) -> typing.Union['ArchivedIssuesFilterRequestArchivedBy', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["archivedDateRange"]) -> typing.Union['DateRangeFilterRequest', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["issueTypes"]) -> typing.Union['ArchivedIssuesFilterRequestIssueTypes', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projects"]) -> typing.Union['ArchivedIssuesFilterRequestProjects', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reporters"]) -> typing.Union['ArchivedIssuesFilterRequestReporters', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["archivedBy"], typing_extensions.Literal["archivedDateRange"], typing_extensions.Literal["issueTypes"], typing_extensions.Literal["projects"], typing_extensions.Literal["reporters"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        archivedBy: typing.Union['ArchivedIssuesFilterRequestArchivedBy', schemas.Unset] = schemas.unset,
        archivedDateRange: typing.Union['DateRangeFilterRequest', schemas.Unset] = schemas.unset,
        issueTypes: typing.Union['ArchivedIssuesFilterRequestIssueTypes', schemas.Unset] = schemas.unset,
        projects: typing.Union['ArchivedIssuesFilterRequestProjects', schemas.Unset] = schemas.unset,
        reporters: typing.Union['ArchivedIssuesFilterRequestReporters', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'ArchivedIssuesFilterRequest':
        return super().__new__(
            cls,
            *args,
            archivedBy=archivedBy,
            archivedDateRange=archivedDateRange,
            issueTypes=issueTypes,
            projects=projects,
            reporters=reporters,
            _configuration=_configuration,
            **kwargs,
        )

from atlassian_jira_python_sdk.model.archived_issues_filter_request_archived_by import ArchivedIssuesFilterRequestArchivedBy
from atlassian_jira_python_sdk.model.archived_issues_filter_request_issue_types import ArchivedIssuesFilterRequestIssueTypes
from atlassian_jira_python_sdk.model.archived_issues_filter_request_projects import ArchivedIssuesFilterRequestProjects
from atlassian_jira_python_sdk.model.archived_issues_filter_request_reporters import ArchivedIssuesFilterRequestReporters
from atlassian_jira_python_sdk.model.date_range_filter_request import DateRangeFilterRequest
