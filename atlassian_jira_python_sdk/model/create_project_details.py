# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from atlassian_jira_python_sdk import schemas  # noqa: F401


class CreateProjectDetails(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Details about the project.
    """


    class MetaOapg:
        required = {
            "name",
            "key",
        }
        
        class properties:
            key = schemas.StrSchema
            name = schemas.StrSchema
            description = schemas.StrSchema
            
            
            class assigneeType(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "PROJECT_LEAD": "PROJECT_LEAD",
                        "UNASSIGNED": "UNASSIGNED",
                    }
                
                @schemas.classproperty
                def PROJECT_LEAD(cls):
                    return cls("PROJECT_LEAD")
                
                @schemas.classproperty
                def UNASSIGNED(cls):
                    return cls("UNASSIGNED")
            avatarId = schemas.Int64Schema
            categoryId = schemas.Int64Schema
            fieldConfigurationScheme = schemas.Int64Schema
            issueSecurityScheme = schemas.Int64Schema
            issueTypeScheme = schemas.Int64Schema
            issueTypeScreenScheme = schemas.Int64Schema
            lead = schemas.StrSchema
            
            
            class leadAccountId(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 128
            notificationScheme = schemas.Int64Schema
            permissionScheme = schemas.Int64Schema
            
            
            class projectTemplateKey(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "com.pyxis.greenhopper.jira:gh-simplified-agility-kanban": "PYXIS_GREENHOPPER_JIRAGHSIMPLIFIEDAGILITYKANBAN",
                        "com.pyxis.greenhopper.jira:gh-simplified-agility-scrum": "PYXIS_GREENHOPPER_JIRAGHSIMPLIFIEDAGILITYSCRUM",
                        "com.pyxis.greenhopper.jira:gh-simplified-basic": "PYXIS_GREENHOPPER_JIRAGHSIMPLIFIEDBASIC",
                        "com.pyxis.greenhopper.jira:gh-simplified-kanban-classic": "PYXIS_GREENHOPPER_JIRAGHSIMPLIFIEDKANBANCLASSIC",
                        "com.pyxis.greenhopper.jira:gh-simplified-scrum-classic": "PYXIS_GREENHOPPER_JIRAGHSIMPLIFIEDSCRUMCLASSIC",
                        "com.pyxis.greenhopper.jira:gh-cross-team-template": "PYXIS_GREENHOPPER_JIRAGHCROSSTEAMTEMPLATE",
                        "com.pyxis.greenhopper.jira:gh-cross-team-planning-template": "PYXIS_GREENHOPPER_JIRAGHCROSSTEAMPLANNINGTEMPLATE",
                        "com.atlassian.servicedesk:simplified-it-service-management": "ATLASSIAN_SERVICEDESKSIMPLIFIEDITSERVICEMANAGEMENT",
                        "com.atlassian.servicedesk:simplified-general-service-desk": "ATLASSIAN_SERVICEDESKSIMPLIFIEDGENERALSERVICEDESK",
                        "com.atlassian.servicedesk:simplified-general-service-desk-it": "ATLASSIAN_SERVICEDESKSIMPLIFIEDGENERALSERVICEDESKIT",
                        "com.atlassian.servicedesk:simplified-general-service-desk-business": "ATLASSIAN_SERVICEDESKSIMPLIFIEDGENERALSERVICEDESKBUSINESS",
                        "com.atlassian.servicedesk:simplified-internal-service-desk": "ATLASSIAN_SERVICEDESKSIMPLIFIEDINTERNALSERVICEDESK",
                        "com.atlassian.servicedesk:simplified-external-service-desk": "ATLASSIAN_SERVICEDESKSIMPLIFIEDEXTERNALSERVICEDESK",
                        "com.atlassian.servicedesk:simplified-hr-service-desk": "ATLASSIAN_SERVICEDESKSIMPLIFIEDHRSERVICEDESK",
                        "com.atlassian.servicedesk:simplified-facilities-service-desk": "ATLASSIAN_SERVICEDESKSIMPLIFIEDFACILITIESSERVICEDESK",
                        "com.atlassian.servicedesk:simplified-legal-service-desk": "ATLASSIAN_SERVICEDESKSIMPLIFIEDLEGALSERVICEDESK",
                        "com.atlassian.servicedesk:simplified-marketing-service-desk": "ATLASSIAN_SERVICEDESKSIMPLIFIEDMARKETINGSERVICEDESK",
                        "com.atlassian.servicedesk:simplified-finance-service-desk": "ATLASSIAN_SERVICEDESKSIMPLIFIEDFINANCESERVICEDESK",
                        "com.atlassian.servicedesk:simplified-analytics-service-desk": "ATLASSIAN_SERVICEDESKSIMPLIFIEDANALYTICSSERVICEDESK",
                        "com.atlassian.servicedesk:simplified-design-service-desk": "ATLASSIAN_SERVICEDESKSIMPLIFIEDDESIGNSERVICEDESK",
                        "com.atlassian.servicedesk:simplified-sales-service-desk": "ATLASSIAN_SERVICEDESKSIMPLIFIEDSALESSERVICEDESK",
                        "com.atlassian.servicedesk:simplified-halp-service-desk": "ATLASSIAN_SERVICEDESKSIMPLIFIEDHALPSERVICEDESK",
                        "com.atlassian.servicedesk:simplified-blank-project-it": "ATLASSIAN_SERVICEDESKSIMPLIFIEDBLANKPROJECTIT",
                        "com.atlassian.servicedesk:simplified-blank-project-business": "ATLASSIAN_SERVICEDESKSIMPLIFIEDBLANKPROJECTBUSINESS",
                        "com.atlassian.servicedesk:next-gen-it-service-desk": "ATLASSIAN_SERVICEDESKNEXTGENITSERVICEDESK",
                        "com.atlassian.servicedesk:next-gen-hr-service-desk": "ATLASSIAN_SERVICEDESKNEXTGENHRSERVICEDESK",
                        "com.atlassian.servicedesk:next-gen-legal-service-desk": "ATLASSIAN_SERVICEDESKNEXTGENLEGALSERVICEDESK",
                        "com.atlassian.servicedesk:next-gen-marketing-service-desk": "ATLASSIAN_SERVICEDESKNEXTGENMARKETINGSERVICEDESK",
                        "com.atlassian.servicedesk:next-gen-facilities-service-desk": "ATLASSIAN_SERVICEDESKNEXTGENFACILITIESSERVICEDESK",
                        "com.atlassian.servicedesk:next-gen-general-service-desk": "ATLASSIAN_SERVICEDESKNEXTGENGENERALSERVICEDESK",
                        "com.atlassian.servicedesk:next-gen-general-it-service-desk": "ATLASSIAN_SERVICEDESKNEXTGENGENERALITSERVICEDESK",
                        "com.atlassian.servicedesk:next-gen-general-business-service-desk": "ATLASSIAN_SERVICEDESKNEXTGENGENERALBUSINESSSERVICEDESK",
                        "com.atlassian.servicedesk:next-gen-analytics-service-desk": "ATLASSIAN_SERVICEDESKNEXTGENANALYTICSSERVICEDESK",
                        "com.atlassian.servicedesk:next-gen-finance-service-desk": "ATLASSIAN_SERVICEDESKNEXTGENFINANCESERVICEDESK",
                        "com.atlassian.servicedesk:next-gen-design-service-desk": "ATLASSIAN_SERVICEDESKNEXTGENDESIGNSERVICEDESK",
                        "com.atlassian.servicedesk:next-gen-sales-service-desk": "ATLASSIAN_SERVICEDESKNEXTGENSALESSERVICEDESK",
                        "com.atlassian.jira-core-project-templates:jira-core-simplified-content-management": "ATLASSIAN_JIRACOREPROJECTTEMPLATESJIRACORESIMPLIFIEDCONTENTMANAGEMENT",
                        "com.atlassian.jira-core-project-templates:jira-core-simplified-document-approval": "ATLASSIAN_JIRACOREPROJECTTEMPLATESJIRACORESIMPLIFIEDDOCUMENTAPPROVAL",
                        "com.atlassian.jira-core-project-templates:jira-core-simplified-lead-tracking": "ATLASSIAN_JIRACOREPROJECTTEMPLATESJIRACORESIMPLIFIEDLEADTRACKING",
                        "com.atlassian.jira-core-project-templates:jira-core-simplified-process-control": "ATLASSIAN_JIRACOREPROJECTTEMPLATESJIRACORESIMPLIFIEDPROCESSCONTROL",
                        "com.atlassian.jira-core-project-templates:jira-core-simplified-procurement": "ATLASSIAN_JIRACOREPROJECTTEMPLATESJIRACORESIMPLIFIEDPROCUREMENT",
                        "com.atlassian.jira-core-project-templates:jira-core-simplified-project-management": "ATLASSIAN_JIRACOREPROJECTTEMPLATESJIRACORESIMPLIFIEDPROJECTMANAGEMENT",
                        "com.atlassian.jira-core-project-templates:jira-core-simplified-recruitment": "ATLASSIAN_JIRACOREPROJECTTEMPLATESJIRACORESIMPLIFIEDRECRUITMENT",
                        "com.atlassian.jira-core-project-templates:jira-core-simplified-task-": "ATLASSIAN_JIRACOREPROJECTTEMPLATESJIRACORESIMPLIFIEDTASK",
                    }
                
                @schemas.classproperty
                def PYXIS_GREENHOPPER_JIRAGHSIMPLIFIEDAGILITYKANBAN(cls):
                    return cls("com.pyxis.greenhopper.jira:gh-simplified-agility-kanban")
                
                @schemas.classproperty
                def PYXIS_GREENHOPPER_JIRAGHSIMPLIFIEDAGILITYSCRUM(cls):
                    return cls("com.pyxis.greenhopper.jira:gh-simplified-agility-scrum")
                
                @schemas.classproperty
                def PYXIS_GREENHOPPER_JIRAGHSIMPLIFIEDBASIC(cls):
                    return cls("com.pyxis.greenhopper.jira:gh-simplified-basic")
                
                @schemas.classproperty
                def PYXIS_GREENHOPPER_JIRAGHSIMPLIFIEDKANBANCLASSIC(cls):
                    return cls("com.pyxis.greenhopper.jira:gh-simplified-kanban-classic")
                
                @schemas.classproperty
                def PYXIS_GREENHOPPER_JIRAGHSIMPLIFIEDSCRUMCLASSIC(cls):
                    return cls("com.pyxis.greenhopper.jira:gh-simplified-scrum-classic")
                
                @schemas.classproperty
                def PYXIS_GREENHOPPER_JIRAGHCROSSTEAMTEMPLATE(cls):
                    return cls("com.pyxis.greenhopper.jira:gh-cross-team-template")
                
                @schemas.classproperty
                def PYXIS_GREENHOPPER_JIRAGHCROSSTEAMPLANNINGTEMPLATE(cls):
                    return cls("com.pyxis.greenhopper.jira:gh-cross-team-planning-template")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDITSERVICEMANAGEMENT(cls):
                    return cls("com.atlassian.servicedesk:simplified-it-service-management")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDGENERALSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:simplified-general-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDGENERALSERVICEDESKIT(cls):
                    return cls("com.atlassian.servicedesk:simplified-general-service-desk-it")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDGENERALSERVICEDESKBUSINESS(cls):
                    return cls("com.atlassian.servicedesk:simplified-general-service-desk-business")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDINTERNALSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:simplified-internal-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDEXTERNALSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:simplified-external-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDHRSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:simplified-hr-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDFACILITIESSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:simplified-facilities-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDLEGALSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:simplified-legal-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDMARKETINGSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:simplified-marketing-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDFINANCESERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:simplified-finance-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDANALYTICSSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:simplified-analytics-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDDESIGNSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:simplified-design-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDSALESSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:simplified-sales-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDHALPSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:simplified-halp-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDBLANKPROJECTIT(cls):
                    return cls("com.atlassian.servicedesk:simplified-blank-project-it")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKSIMPLIFIEDBLANKPROJECTBUSINESS(cls):
                    return cls("com.atlassian.servicedesk:simplified-blank-project-business")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKNEXTGENITSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:next-gen-it-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKNEXTGENHRSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:next-gen-hr-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKNEXTGENLEGALSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:next-gen-legal-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKNEXTGENMARKETINGSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:next-gen-marketing-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKNEXTGENFACILITIESSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:next-gen-facilities-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKNEXTGENGENERALSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:next-gen-general-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKNEXTGENGENERALITSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:next-gen-general-it-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKNEXTGENGENERALBUSINESSSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:next-gen-general-business-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKNEXTGENANALYTICSSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:next-gen-analytics-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKNEXTGENFINANCESERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:next-gen-finance-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKNEXTGENDESIGNSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:next-gen-design-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_SERVICEDESKNEXTGENSALESSERVICEDESK(cls):
                    return cls("com.atlassian.servicedesk:next-gen-sales-service-desk")
                
                @schemas.classproperty
                def ATLASSIAN_JIRACOREPROJECTTEMPLATESJIRACORESIMPLIFIEDCONTENTMANAGEMENT(cls):
                    return cls("com.atlassian.jira-core-project-templates:jira-core-simplified-content-management")
                
                @schemas.classproperty
                def ATLASSIAN_JIRACOREPROJECTTEMPLATESJIRACORESIMPLIFIEDDOCUMENTAPPROVAL(cls):
                    return cls("com.atlassian.jira-core-project-templates:jira-core-simplified-document-approval")
                
                @schemas.classproperty
                def ATLASSIAN_JIRACOREPROJECTTEMPLATESJIRACORESIMPLIFIEDLEADTRACKING(cls):
                    return cls("com.atlassian.jira-core-project-templates:jira-core-simplified-lead-tracking")
                
                @schemas.classproperty
                def ATLASSIAN_JIRACOREPROJECTTEMPLATESJIRACORESIMPLIFIEDPROCESSCONTROL(cls):
                    return cls("com.atlassian.jira-core-project-templates:jira-core-simplified-process-control")
                
                @schemas.classproperty
                def ATLASSIAN_JIRACOREPROJECTTEMPLATESJIRACORESIMPLIFIEDPROCUREMENT(cls):
                    return cls("com.atlassian.jira-core-project-templates:jira-core-simplified-procurement")
                
                @schemas.classproperty
                def ATLASSIAN_JIRACOREPROJECTTEMPLATESJIRACORESIMPLIFIEDPROJECTMANAGEMENT(cls):
                    return cls("com.atlassian.jira-core-project-templates:jira-core-simplified-project-management")
                
                @schemas.classproperty
                def ATLASSIAN_JIRACOREPROJECTTEMPLATESJIRACORESIMPLIFIEDRECRUITMENT(cls):
                    return cls("com.atlassian.jira-core-project-templates:jira-core-simplified-recruitment")
                
                @schemas.classproperty
                def ATLASSIAN_JIRACOREPROJECTTEMPLATESJIRACORESIMPLIFIEDTASK(cls):
                    return cls("com.atlassian.jira-core-project-templates:jira-core-simplified-task-")
            
            
            class projectTypeKey(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "software": "SOFTWARE",
                        "service_desk": "SERVICE_DESK",
                        "business": "BUSINESS",
                    }
                
                @schemas.classproperty
                def SOFTWARE(cls):
                    return cls("software")
                
                @schemas.classproperty
                def SERVICE_DESK(cls):
                    return cls("service_desk")
                
                @schemas.classproperty
                def BUSINESS(cls):
                    return cls("business")
            url = schemas.StrSchema
            workflowScheme = schemas.Int64Schema
            __annotations__ = {
                "key": key,
                "name": name,
                "description": description,
                "assigneeType": assigneeType,
                "avatarId": avatarId,
                "categoryId": categoryId,
                "fieldConfigurationScheme": fieldConfigurationScheme,
                "issueSecurityScheme": issueSecurityScheme,
                "issueTypeScheme": issueTypeScheme,
                "issueTypeScreenScheme": issueTypeScreenScheme,
                "lead": lead,
                "leadAccountId": leadAccountId,
                "notificationScheme": notificationScheme,
                "permissionScheme": permissionScheme,
                "projectTemplateKey": projectTemplateKey,
                "projectTypeKey": projectTypeKey,
                "url": url,
                "workflowScheme": workflowScheme,
            }
    
    name: MetaOapg.properties.name
    key: MetaOapg.properties.key
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["key"]) -> MetaOapg.properties.key: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["assigneeType"]) -> MetaOapg.properties.assigneeType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["avatarId"]) -> MetaOapg.properties.avatarId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["categoryId"]) -> MetaOapg.properties.categoryId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fieldConfigurationScheme"]) -> MetaOapg.properties.fieldConfigurationScheme: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["issueSecurityScheme"]) -> MetaOapg.properties.issueSecurityScheme: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["issueTypeScheme"]) -> MetaOapg.properties.issueTypeScheme: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["issueTypeScreenScheme"]) -> MetaOapg.properties.issueTypeScreenScheme: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lead"]) -> MetaOapg.properties.lead: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["leadAccountId"]) -> MetaOapg.properties.leadAccountId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["notificationScheme"]) -> MetaOapg.properties.notificationScheme: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["permissionScheme"]) -> MetaOapg.properties.permissionScheme: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projectTemplateKey"]) -> MetaOapg.properties.projectTemplateKey: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projectTypeKey"]) -> MetaOapg.properties.projectTypeKey: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["url"]) -> MetaOapg.properties.url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workflowScheme"]) -> MetaOapg.properties.workflowScheme: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["key", "name", "description", "assigneeType", "avatarId", "categoryId", "fieldConfigurationScheme", "issueSecurityScheme", "issueTypeScheme", "issueTypeScreenScheme", "lead", "leadAccountId", "notificationScheme", "permissionScheme", "projectTemplateKey", "projectTypeKey", "url", "workflowScheme", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["key"]) -> MetaOapg.properties.key: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["assigneeType"]) -> typing.Union[MetaOapg.properties.assigneeType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["avatarId"]) -> typing.Union[MetaOapg.properties.avatarId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["categoryId"]) -> typing.Union[MetaOapg.properties.categoryId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fieldConfigurationScheme"]) -> typing.Union[MetaOapg.properties.fieldConfigurationScheme, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["issueSecurityScheme"]) -> typing.Union[MetaOapg.properties.issueSecurityScheme, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["issueTypeScheme"]) -> typing.Union[MetaOapg.properties.issueTypeScheme, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["issueTypeScreenScheme"]) -> typing.Union[MetaOapg.properties.issueTypeScreenScheme, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lead"]) -> typing.Union[MetaOapg.properties.lead, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["leadAccountId"]) -> typing.Union[MetaOapg.properties.leadAccountId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["notificationScheme"]) -> typing.Union[MetaOapg.properties.notificationScheme, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["permissionScheme"]) -> typing.Union[MetaOapg.properties.permissionScheme, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projectTemplateKey"]) -> typing.Union[MetaOapg.properties.projectTemplateKey, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projectTypeKey"]) -> typing.Union[MetaOapg.properties.projectTypeKey, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["url"]) -> typing.Union[MetaOapg.properties.url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workflowScheme"]) -> typing.Union[MetaOapg.properties.workflowScheme, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["key", "name", "description", "assigneeType", "avatarId", "categoryId", "fieldConfigurationScheme", "issueSecurityScheme", "issueTypeScheme", "issueTypeScreenScheme", "lead", "leadAccountId", "notificationScheme", "permissionScheme", "projectTemplateKey", "projectTypeKey", "url", "workflowScheme", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        key: typing.Union[MetaOapg.properties.key, str, ],
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        assigneeType: typing.Union[MetaOapg.properties.assigneeType, str, schemas.Unset] = schemas.unset,
        avatarId: typing.Union[MetaOapg.properties.avatarId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        categoryId: typing.Union[MetaOapg.properties.categoryId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        fieldConfigurationScheme: typing.Union[MetaOapg.properties.fieldConfigurationScheme, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        issueSecurityScheme: typing.Union[MetaOapg.properties.issueSecurityScheme, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        issueTypeScheme: typing.Union[MetaOapg.properties.issueTypeScheme, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        issueTypeScreenScheme: typing.Union[MetaOapg.properties.issueTypeScreenScheme, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        lead: typing.Union[MetaOapg.properties.lead, str, schemas.Unset] = schemas.unset,
        leadAccountId: typing.Union[MetaOapg.properties.leadAccountId, str, schemas.Unset] = schemas.unset,
        notificationScheme: typing.Union[MetaOapg.properties.notificationScheme, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        permissionScheme: typing.Union[MetaOapg.properties.permissionScheme, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        projectTemplateKey: typing.Union[MetaOapg.properties.projectTemplateKey, str, schemas.Unset] = schemas.unset,
        projectTypeKey: typing.Union[MetaOapg.properties.projectTypeKey, str, schemas.Unset] = schemas.unset,
        url: typing.Union[MetaOapg.properties.url, str, schemas.Unset] = schemas.unset,
        workflowScheme: typing.Union[MetaOapg.properties.workflowScheme, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CreateProjectDetails':
        return super().__new__(
            cls,
            *args,
            name=name,
            key=key,
            description=description,
            assigneeType=assigneeType,
            avatarId=avatarId,
            categoryId=categoryId,
            fieldConfigurationScheme=fieldConfigurationScheme,
            issueSecurityScheme=issueSecurityScheme,
            issueTypeScheme=issueTypeScheme,
            issueTypeScreenScheme=issueTypeScreenScheme,
            lead=lead,
            leadAccountId=leadAccountId,
            notificationScheme=notificationScheme,
            permissionScheme=permissionScheme,
            projectTemplateKey=projectTemplateKey,
            projectTypeKey=projectTypeKey,
            url=url,
            workflowScheme=workflowScheme,
            _configuration=_configuration,
            **kwargs,
        )
