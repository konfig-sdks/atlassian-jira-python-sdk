# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from atlassian_jira_python_sdk import schemas  # noqa: F401


class FieldReferenceData(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Details of a field that can be used in advanced searches.
    """


    class MetaOapg:
        
        class properties:
            
            
            class auto(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def TRUE(cls):
                    return cls("true")
                
                @schemas.classproperty
                def FALSE(cls):
                    return cls("false")
            cfid = schemas.StrSchema
            
            
            class deprecated(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def TRUE(cls):
                    return cls("true")
                
                @schemas.classproperty
                def FALSE(cls):
                    return cls("false")
            deprecatedSearcherKey = schemas.StrSchema
            displayName = schemas.StrSchema
        
            @staticmethod
            def operators() -> typing.Type['FieldReferenceDataOperators']:
                return FieldReferenceDataOperators
            
            
            class orderable(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def TRUE(cls):
                    return cls("true")
                
                @schemas.classproperty
                def FALSE(cls):
                    return cls("false")
            
            
            class searchable(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def TRUE(cls):
                    return cls("true")
                
                @schemas.classproperty
                def FALSE(cls):
                    return cls("false")
        
            @staticmethod
            def types() -> typing.Type['FieldReferenceDataTypes']:
                return FieldReferenceDataTypes
            value = schemas.StrSchema
            __annotations__ = {
                "auto": auto,
                "cfid": cfid,
                "deprecated": deprecated,
                "deprecatedSearcherKey": deprecatedSearcherKey,
                "displayName": displayName,
                "operators": operators,
                "orderable": orderable,
                "searchable": searchable,
                "types": types,
                "value": value,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["auto"]) -> MetaOapg.properties.auto: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cfid"]) -> MetaOapg.properties.cfid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["deprecated"]) -> MetaOapg.properties.deprecated: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["deprecatedSearcherKey"]) -> MetaOapg.properties.deprecatedSearcherKey: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["displayName"]) -> MetaOapg.properties.displayName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["operators"]) -> 'FieldReferenceDataOperators': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["orderable"]) -> MetaOapg.properties.orderable: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["searchable"]) -> MetaOapg.properties.searchable: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["types"]) -> 'FieldReferenceDataTypes': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["value"]) -> MetaOapg.properties.value: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["auto", "cfid", "deprecated", "deprecatedSearcherKey", "displayName", "operators", "orderable", "searchable", "types", "value", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["auto"]) -> typing.Union[MetaOapg.properties.auto, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cfid"]) -> typing.Union[MetaOapg.properties.cfid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["deprecated"]) -> typing.Union[MetaOapg.properties.deprecated, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["deprecatedSearcherKey"]) -> typing.Union[MetaOapg.properties.deprecatedSearcherKey, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["displayName"]) -> typing.Union[MetaOapg.properties.displayName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["operators"]) -> typing.Union['FieldReferenceDataOperators', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["orderable"]) -> typing.Union[MetaOapg.properties.orderable, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["searchable"]) -> typing.Union[MetaOapg.properties.searchable, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["types"]) -> typing.Union['FieldReferenceDataTypes', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["value"]) -> typing.Union[MetaOapg.properties.value, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["auto", "cfid", "deprecated", "deprecatedSearcherKey", "displayName", "operators", "orderable", "searchable", "types", "value", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        auto: typing.Union[MetaOapg.properties.auto, str, schemas.Unset] = schemas.unset,
        cfid: typing.Union[MetaOapg.properties.cfid, str, schemas.Unset] = schemas.unset,
        deprecated: typing.Union[MetaOapg.properties.deprecated, str, schemas.Unset] = schemas.unset,
        deprecatedSearcherKey: typing.Union[MetaOapg.properties.deprecatedSearcherKey, str, schemas.Unset] = schemas.unset,
        displayName: typing.Union[MetaOapg.properties.displayName, str, schemas.Unset] = schemas.unset,
        operators: typing.Union['FieldReferenceDataOperators', schemas.Unset] = schemas.unset,
        orderable: typing.Union[MetaOapg.properties.orderable, str, schemas.Unset] = schemas.unset,
        searchable: typing.Union[MetaOapg.properties.searchable, str, schemas.Unset] = schemas.unset,
        types: typing.Union['FieldReferenceDataTypes', schemas.Unset] = schemas.unset,
        value: typing.Union[MetaOapg.properties.value, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'FieldReferenceData':
        return super().__new__(
            cls,
            *args,
            auto=auto,
            cfid=cfid,
            deprecated=deprecated,
            deprecatedSearcherKey=deprecatedSearcherKey,
            displayName=displayName,
            operators=operators,
            orderable=orderable,
            searchable=searchable,
            types=types,
            value=value,
            _configuration=_configuration,
            **kwargs,
        )

from atlassian_jira_python_sdk.model.field_reference_data_operators import FieldReferenceDataOperators
from atlassian_jira_python_sdk.model.field_reference_data_types import FieldReferenceDataTypes
