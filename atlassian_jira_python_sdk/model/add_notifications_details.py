# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from atlassian_jira_python_sdk import schemas  # noqa: F401


class AddNotificationsDetails(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Details of notifications which should be added to the notification scheme.
    """


    class MetaOapg:
        required = {
            "notificationSchemeEvents",
        }
        
        class properties:
            
            
            class notificationSchemeEvents(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['NotificationSchemeEventDetails']:
                        return NotificationSchemeEventDetails
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['NotificationSchemeEventDetails'], typing.List['NotificationSchemeEventDetails']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'notificationSchemeEvents':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'NotificationSchemeEventDetails':
                    return super().__getitem__(i)
            __annotations__ = {
                "notificationSchemeEvents": notificationSchemeEvents,
            }
        additional_properties = schemas.AnyTypeSchema
    
    notificationSchemeEvents: MetaOapg.properties.notificationSchemeEvents
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["notificationSchemeEvents"]) -> MetaOapg.properties.notificationSchemeEvents: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["notificationSchemeEvents"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["notificationSchemeEvents"]) -> MetaOapg.properties.notificationSchemeEvents: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["notificationSchemeEvents"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        notificationSchemeEvents: typing.Union[MetaOapg.properties.notificationSchemeEvents, list, tuple, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'AddNotificationsDetails':
        return super().__new__(
            cls,
            *args,
            notificationSchemeEvents=notificationSchemeEvents,
            _configuration=_configuration,
            **kwargs,
        )

from atlassian_jira_python_sdk.model.notification_scheme_event_details import NotificationSchemeEventDetails
