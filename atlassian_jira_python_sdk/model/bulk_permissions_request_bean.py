# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from atlassian_jira_python_sdk import schemas  # noqa: F401


class BulkPermissionsRequestBean(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Details of global permissions to look up and project permissions with associated projects and issues to look up.
    """


    class MetaOapg:
        
        class properties:
            accountId = schemas.StrSchema
        
            @staticmethod
            def globalPermissions() -> typing.Type['BulkPermissionsRequestBeanGlobalPermissions']:
                return BulkPermissionsRequestBeanGlobalPermissions
            
            
            class projectPermissions(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    unique_items = True
                    
                    @staticmethod
                    def items() -> typing.Type['BulkProjectPermissions']:
                        return BulkProjectPermissions
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['BulkProjectPermissions'], typing.List['BulkProjectPermissions']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'projectPermissions':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'BulkProjectPermissions':
                    return super().__getitem__(i)
            __annotations__ = {
                "accountId": accountId,
                "globalPermissions": globalPermissions,
                "projectPermissions": projectPermissions,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["accountId"]) -> MetaOapg.properties.accountId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["globalPermissions"]) -> 'BulkPermissionsRequestBeanGlobalPermissions': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projectPermissions"]) -> MetaOapg.properties.projectPermissions: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["accountId", "globalPermissions", "projectPermissions", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["accountId"]) -> typing.Union[MetaOapg.properties.accountId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["globalPermissions"]) -> typing.Union['BulkPermissionsRequestBeanGlobalPermissions', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projectPermissions"]) -> typing.Union[MetaOapg.properties.projectPermissions, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["accountId", "globalPermissions", "projectPermissions", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        accountId: typing.Union[MetaOapg.properties.accountId, str, schemas.Unset] = schemas.unset,
        globalPermissions: typing.Union['BulkPermissionsRequestBeanGlobalPermissions', schemas.Unset] = schemas.unset,
        projectPermissions: typing.Union[MetaOapg.properties.projectPermissions, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'BulkPermissionsRequestBean':
        return super().__new__(
            cls,
            *args,
            accountId=accountId,
            globalPermissions=globalPermissions,
            projectPermissions=projectPermissions,
            _configuration=_configuration,
            **kwargs,
        )

from atlassian_jira_python_sdk.model.bulk_permissions_request_bean_global_permissions import BulkPermissionsRequestBeanGlobalPermissions
from atlassian_jira_python_sdk.model.bulk_project_permissions import BulkProjectPermissions
