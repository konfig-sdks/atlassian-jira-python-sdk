# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from atlassian_jira_python_sdk import schemas  # noqa: F401


class ProjectLandingPageInfo(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def attributes() -> typing.Type['ProjectLandingPageInfoAttributes']:
                return ProjectLandingPageInfoAttributes
            boardId = schemas.Int64Schema
            boardName = schemas.StrSchema
            projectKey = schemas.StrSchema
            projectType = schemas.StrSchema
            queueCategory = schemas.StrSchema
            queueId = schemas.Int64Schema
            queueName = schemas.StrSchema
            simpleBoard = schemas.BoolSchema
            simplified = schemas.BoolSchema
            url = schemas.StrSchema
            __annotations__ = {
                "attributes": attributes,
                "boardId": boardId,
                "boardName": boardName,
                "projectKey": projectKey,
                "projectType": projectType,
                "queueCategory": queueCategory,
                "queueId": queueId,
                "queueName": queueName,
                "simpleBoard": simpleBoard,
                "simplified": simplified,
                "url": url,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["attributes"]) -> 'ProjectLandingPageInfoAttributes': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["boardId"]) -> MetaOapg.properties.boardId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["boardName"]) -> MetaOapg.properties.boardName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projectKey"]) -> MetaOapg.properties.projectKey: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projectType"]) -> MetaOapg.properties.projectType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["queueCategory"]) -> MetaOapg.properties.queueCategory: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["queueId"]) -> MetaOapg.properties.queueId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["queueName"]) -> MetaOapg.properties.queueName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["simpleBoard"]) -> MetaOapg.properties.simpleBoard: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["simplified"]) -> MetaOapg.properties.simplified: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["url"]) -> MetaOapg.properties.url: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["attributes", "boardId", "boardName", "projectKey", "projectType", "queueCategory", "queueId", "queueName", "simpleBoard", "simplified", "url", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["attributes"]) -> typing.Union['ProjectLandingPageInfoAttributes', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["boardId"]) -> typing.Union[MetaOapg.properties.boardId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["boardName"]) -> typing.Union[MetaOapg.properties.boardName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projectKey"]) -> typing.Union[MetaOapg.properties.projectKey, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projectType"]) -> typing.Union[MetaOapg.properties.projectType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["queueCategory"]) -> typing.Union[MetaOapg.properties.queueCategory, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["queueId"]) -> typing.Union[MetaOapg.properties.queueId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["queueName"]) -> typing.Union[MetaOapg.properties.queueName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["simpleBoard"]) -> typing.Union[MetaOapg.properties.simpleBoard, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["simplified"]) -> typing.Union[MetaOapg.properties.simplified, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["url"]) -> typing.Union[MetaOapg.properties.url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["attributes", "boardId", "boardName", "projectKey", "projectType", "queueCategory", "queueId", "queueName", "simpleBoard", "simplified", "url", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        attributes: typing.Union['ProjectLandingPageInfoAttributes', schemas.Unset] = schemas.unset,
        boardId: typing.Union[MetaOapg.properties.boardId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        boardName: typing.Union[MetaOapg.properties.boardName, str, schemas.Unset] = schemas.unset,
        projectKey: typing.Union[MetaOapg.properties.projectKey, str, schemas.Unset] = schemas.unset,
        projectType: typing.Union[MetaOapg.properties.projectType, str, schemas.Unset] = schemas.unset,
        queueCategory: typing.Union[MetaOapg.properties.queueCategory, str, schemas.Unset] = schemas.unset,
        queueId: typing.Union[MetaOapg.properties.queueId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        queueName: typing.Union[MetaOapg.properties.queueName, str, schemas.Unset] = schemas.unset,
        simpleBoard: typing.Union[MetaOapg.properties.simpleBoard, bool, schemas.Unset] = schemas.unset,
        simplified: typing.Union[MetaOapg.properties.simplified, bool, schemas.Unset] = schemas.unset,
        url: typing.Union[MetaOapg.properties.url, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ProjectLandingPageInfo':
        return super().__new__(
            cls,
            *args,
            attributes=attributes,
            boardId=boardId,
            boardName=boardName,
            projectKey=projectKey,
            projectType=projectType,
            queueCategory=queueCategory,
            queueId=queueId,
            queueName=queueName,
            simpleBoard=simpleBoard,
            simplified=simplified,
            url=url,
            _configuration=_configuration,
            **kwargs,
        )

from atlassian_jira_python_sdk.model.project_landing_page_info_attributes import ProjectLandingPageInfoAttributes
