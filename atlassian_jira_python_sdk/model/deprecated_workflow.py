# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from atlassian_jira_python_sdk import schemas  # noqa: F401


class DeprecatedWorkflow(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Details about a workflow.
    """


    class MetaOapg:
        
        class properties:
            description = schemas.StrSchema
            default = schemas.BoolSchema
            lastModifiedDate = schemas.StrSchema
            lastModifiedUser = schemas.StrSchema
            lastModifiedUserAccountId = schemas.StrSchema
            name = schemas.StrSchema
        
            @staticmethod
            def scope() -> typing.Type['Scope']:
                return Scope
            steps = schemas.Int32Schema
            __annotations__ = {
                "description": description,
                "default": default,
                "lastModifiedDate": lastModifiedDate,
                "lastModifiedUser": lastModifiedUser,
                "lastModifiedUserAccountId": lastModifiedUserAccountId,
                "name": name,
                "scope": scope,
                "steps": steps,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["default"]) -> MetaOapg.properties.default: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastModifiedDate"]) -> MetaOapg.properties.lastModifiedDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastModifiedUser"]) -> MetaOapg.properties.lastModifiedUser: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastModifiedUserAccountId"]) -> MetaOapg.properties.lastModifiedUserAccountId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["scope"]) -> 'Scope': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["steps"]) -> MetaOapg.properties.steps: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["description", "default", "lastModifiedDate", "lastModifiedUser", "lastModifiedUserAccountId", "name", "scope", "steps", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["default"]) -> typing.Union[MetaOapg.properties.default, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastModifiedDate"]) -> typing.Union[MetaOapg.properties.lastModifiedDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastModifiedUser"]) -> typing.Union[MetaOapg.properties.lastModifiedUser, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastModifiedUserAccountId"]) -> typing.Union[MetaOapg.properties.lastModifiedUserAccountId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["scope"]) -> typing.Union['Scope', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["steps"]) -> typing.Union[MetaOapg.properties.steps, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["description", "default", "lastModifiedDate", "lastModifiedUser", "lastModifiedUserAccountId", "name", "scope", "steps", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        default: typing.Union[MetaOapg.properties.default, bool, schemas.Unset] = schemas.unset,
        lastModifiedDate: typing.Union[MetaOapg.properties.lastModifiedDate, str, schemas.Unset] = schemas.unset,
        lastModifiedUser: typing.Union[MetaOapg.properties.lastModifiedUser, str, schemas.Unset] = schemas.unset,
        lastModifiedUserAccountId: typing.Union[MetaOapg.properties.lastModifiedUserAccountId, str, schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        scope: typing.Union['Scope', schemas.Unset] = schemas.unset,
        steps: typing.Union[MetaOapg.properties.steps, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DeprecatedWorkflow':
        return super().__new__(
            cls,
            *args,
            description=description,
            default=default,
            lastModifiedDate=lastModifiedDate,
            lastModifiedUser=lastModifiedUser,
            lastModifiedUserAccountId=lastModifiedUserAccountId,
            name=name,
            scope=scope,
            steps=steps,
            _configuration=_configuration,
            **kwargs,
        )

from atlassian_jira_python_sdk.model.scope import Scope
