# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation

    The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
    Contact: ecosystem@atlassian.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from atlassian_jira_python_sdk import schemas  # noqa: F401


class Notification(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Details about a notification.
    """


    class MetaOapg:
        
        class properties:
            htmlBody = schemas.StrSchema
        
            @staticmethod
            def restrict() -> typing.Type['NotificationRecipientsRestrictions']:
                return NotificationRecipientsRestrictions
            subject = schemas.StrSchema
            textBody = schemas.StrSchema
        
            @staticmethod
            def to() -> typing.Type['NotificationRecipients']:
                return NotificationRecipients
            __annotations__ = {
                "htmlBody": htmlBody,
                "restrict": restrict,
                "subject": subject,
                "textBody": textBody,
                "to": to,
            }
        additional_properties = schemas.AnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["htmlBody"]) -> MetaOapg.properties.htmlBody: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["restrict"]) -> 'NotificationRecipientsRestrictions': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["subject"]) -> MetaOapg.properties.subject: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["textBody"]) -> MetaOapg.properties.textBody: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["to"]) -> 'NotificationRecipients': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["htmlBody"], typing_extensions.Literal["restrict"], typing_extensions.Literal["subject"], typing_extensions.Literal["textBody"], typing_extensions.Literal["to"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["htmlBody"]) -> typing.Union[MetaOapg.properties.htmlBody, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["restrict"]) -> typing.Union['NotificationRecipientsRestrictions', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["subject"]) -> typing.Union[MetaOapg.properties.subject, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["textBody"]) -> typing.Union[MetaOapg.properties.textBody, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["to"]) -> typing.Union['NotificationRecipients', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["htmlBody"], typing_extensions.Literal["restrict"], typing_extensions.Literal["subject"], typing_extensions.Literal["textBody"], typing_extensions.Literal["to"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        htmlBody: typing.Union[MetaOapg.properties.htmlBody, str, schemas.Unset] = schemas.unset,
        restrict: typing.Union['NotificationRecipientsRestrictions', schemas.Unset] = schemas.unset,
        subject: typing.Union[MetaOapg.properties.subject, str, schemas.Unset] = schemas.unset,
        textBody: typing.Union[MetaOapg.properties.textBody, str, schemas.Unset] = schemas.unset,
        to: typing.Union['NotificationRecipients', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'Notification':
        return super().__new__(
            cls,
            *args,
            htmlBody=htmlBody,
            restrict=restrict,
            subject=subject,
            textBody=textBody,
            to=to,
            _configuration=_configuration,
            **kwargs,
        )

from atlassian_jira_python_sdk.model.notification_recipients import NotificationRecipients
from atlassian_jira_python_sdk.model.notification_recipients_restrictions import NotificationRecipientsRestrictions
